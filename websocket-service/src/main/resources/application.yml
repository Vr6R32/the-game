server:
  port: 8085

spring:
  main:
    web-application-type: servlet
  application:
    name: websocket-service
  data:
    mongodb:
      uri: mongodb://mongo:dontgotosql@localhost:27017/user_session
      auto-index-creation: true
  banner:
    location: classpath:banner.txt

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.value.default.type: com.thegame.websocket.messaging.KafkaEvent
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.value.default.type: com.thegame.websocket.messaging.KafkaEvent
        spring.json.trusted.packages: '*'

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    preferIpAddress: false
#    hostname: websocket-service

management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  observations:
    key-values:
      application: websocket-service
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    metrics:
      enabled: true
    shutdown:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true